#!/usr/bin/env bash

#[ -t 1 ] &&
. colors

date

cardno=0

dirs=`ls -d1 /sys/class/drm/card*/device/pp_table | sort --version-sort` #natural sort for 10+ cards
if [[ -z $dirs ]]; then
	echo -e "${RED}No AMD GPUs found as /sys/class/drm/card*/device/pp_table${NOCOLOR}"
	exit 1
fi

#cardno and busid can be unsorted, like card1=>03:00, card2=>05:00
busids_dirs=()
for dir in $dirs; do
	#alternative way: cat /sys/class/drm/card1/device/uevent | grep PCI_SLOT_NAME
	#/sys/devices/pci0000:00/0000:00:1c.6/0000:05:00.0/pp_table
	#/sys/devices/pci0000:00/0000:00:1c.1/0000:03:00.0/0000:04:07.0/0000:08:00.0/pp_table
	#busid=`realpath "$dir" | awk -F/ '{print $(NF-1)}'`

	basedir=${dir%/*} #cut off /pp_table
	busid=`cat $basedir/uevent | grep PCI_SLOT_NAME | awk -F= '{print $2}'`
	busids_dirs+=("$busid;$dir")
done

busids_dirs=`printf '%s\n' "${busids_dirs[@]}" | sort` #sorting by bus id
#echo -e "$busids_dirs"

if [[ ! -f $GPU_DETECT_JSON ]]; then
	gpu_detect_json=`gpu-detect listjson`
else
	gpu_detect_json=$(< $GPU_DETECT_JSON)
fi

# get gpu info from gpu-detect
declare -A GPUINFO
while IFS=";" read busid name vbios; do
	GPUINFO["${busid:--}"]="$name $NOCOLOR$vbios"
done < <( echo "$gpu_detect_json" | jq -r -c '.[] | (.busid+";"+.name+";"+.vbios)' 2>/dev/null )


i=-1
#for dir in $dirs; do
for bdir in $busids_dirs; do
	dir=`echo $bdir | awk -F\; '{print $2}'`

	(( i++ ))
	echo ""

	[[ $dir =~ \/card([0-9a-z]+)\/ ]]
	cardno=${BASH_REMATCH[1]}

	[[ -z $cardno ]] && echo -e "${RED}ERROR: can not match card no in $dir${NOCOLOR}" && continue

	#busid=`realpath /sys/class/drm/card$cardno/device | awk -F/ '{print $NF}'`
	busid=`echo $bdir | awk -F\; '{print $1}'`
	busid=${busid#0000:} #trim prefix

	name="${GPUINFO["$busid"]}"
	[[ -z "$name" ]] && name="`lspci -vmms "$busid" 2>/dev/null | grep -oP "^Device:\s\K.*"`"

	[[ -z $cardno ]] && echo -e "${RED}ERROR: can not match card no in $dir${NOCOLOR}" && continue
	echo -e "${YELLOW}===${NOCOLOR} GPU ${CYAN}$i${NOCOLOR}, ${PURPLE}$busid${NOCOLOR} ${BRED}$name ${YELLOW}===${NOCOLOR}"

	amdcovc -a $i

	#echo "  Performance level: `cat /sys/class/drm/card$cardno/device/power_dpm_force_performance_level`"
	#echo "  Core state: `cat /sys/class/drm/card$cardno/device/pp_dpm_sclk | grep '*'`"
	#echo "  Mem state: `cat /sys/class/drm/card$cardno/device/pp_dpm_mclk | grep '*'`"

	#plevel=`cat /sys/class/drm/card$cardno/device/power_dpm_force_performance_level`
	#[[ $plevel == "manual" ]] && plevelStr="${YELLOW}$plevel${NOCOLOR}" || plevelStr="${BLUE}$plevel${NOCOLOR}"

	sclk=`grep -m1 '*' /sys/class/drm/card$cardno/device/pp_dpm_sclk 2>/dev/null` #3: 1100Mhz *
	mclk=`grep -m1 '*' /sys/class/drm/card$cardno/device/pp_dpm_mclk 2>/dev/null` #2: 1900Mhz *
	fanrpm=`cat /sys/class/drm/card$cardno/device/hwmon/hwmon*/fan1_input 2>/dev/null` #rpm from fan
	ref=`amdmemtweak --current | sed -n "/pci:0000:${busid}/,/pci/p" | grep -oP "REF: \K[0-9]+"`
	core_dpm=`echo $sclk | awk '{print $1}' | sed -e 's/://'`
	core_mhz=`echo $sclk | awk '{print $2}'`
	mem_dpm=`echo $mclk | awk '{print $1}' | sed -e 's/://'`
	mem_mhz=`echo $mclk | awk '{print $2}'`
	ppod=`cat /sys/class/drm/card$cardno/device/pp_od_clk_voltage 2>/dev/null`
	if [[ ! -z $ppod ]]; then
		#corev=`echo "$ppod" | grep -m1 -A7 "OD_SCLK" | grep -m1 "$core_dpm:" | awk '{print $3}'`
		memv=`echo "$ppod" | grep -m1 -A4 "OD_MCLK" | grep -m1 "$mem_dpm:" | awk '{print $3}'`
	fi
	corev=`cat /sys/kernel/debug/dri/$cardno/amdgpu_pm_info | grep -m1 '(VDDGFX)' | awk '{print $1}'`
	#[[ -z $corev ]] && corev=`vegatool -i $cardno --show-voltage | grep -m1 -A1 "Voltage state $core_dpm" | grep VDD | sed -E "s/.*VDD = (.*)/\1/"`
	[[ -z $corev ]] && corev=`ohgodatool -i $cardno --show-voltage | grep -m1 -A1 "Voltage state $core_dpm" | grep VDD | sed -E "s/.*VDD = (.*)/\1/"`
	[[ -z $memv || $memv == 0 ]] && memv=`ohgodatool -i $cardno --show-mem | grep -m1 -A1 "Memory state $mem_dpm" | grep VDDC | sed -E "s/.*VDDC: (.*)/\1/"`

	vddci=`ohgodatool -i $cardno --show-mem | grep -m1 -A2 "Memory state $mem_dpm" | grep VDDCI | sed -E "s/.*VDDCI: (.*)/\1/"`

	gtemp=`cat /sys/class/drm/card$cardno/device/hwmon/hwmon*/temp1_input 2>/dev/null`
	jtemp=`cat /sys/class/drm/card$cardno/device/hwmon/hwmon*/temp2_input 2>/dev/null`
	mtemp=`cat /sys/class/drm/card$cardno/device/hwmon/hwmon*/temp3_input 2>/dev/null`
	[[ ! -z $jtemp ]] && [[ ! -z $mtemp ]] &&
		echo -e  "  Temps :  GPU: $(($gtemp/1000))C   HotSpot: $(($jtemp/1000))C   Mem: $(($mtemp/1000))C "

	pwr='n/a'
	[[ -e /sys/kernel/debug/dri/$cardno/amdgpu_pm_info ]] &&
		pwr=`cat /sys/kernel/debug/dri/$cardno/amdgpu_pm_info | grep -m1 '(average GPU)' | awk '{print $1}'`

	if [[ -e /sys/class/drm/card$cardno/device/current_link_speed ]]; then
       pciestatus=$(atitool -i=$i -pciestatus -debug=0)
       pciespeed=$(echo "$pciestatus" | grep "Link Speed" | sed "s/.*\= //")
       pciewidth=$(echo "$pciestatus" | grep "Link Width" | sed "s/.*\= //")
#		pciespeed=`cat /sys/class/drm/card$cardno/device/current_link_speed`
#		pciewidth=`cat /sys/class/drm/card$cardno/device/current_link_width`
		echo  "  PCIE Link speed: $pciespeed, PCIE Link width: $pciewidth"
	fi

	meminfo=
	if [[ -e /sys/kernel/debug/dri/$cardno/amdgpu_vram_mm ]]; then
		vram=`grep -m 1 "^total:" /sys/kernel/debug/dri/$cardno/amdgpu_vram_mm`
		#total: 2097152, used 978872 free 1118280
		[[ ! -z "$vram" ]] &&
			meminfo=`echo "$vram" | awk '{printf "%s %.2f MB, %s: %.2f MB, %s: %.2f MB", $1, $2/256, $3, $4/256, $5, $6/256}'` &&
			mem_type=$(gpu-detect listjson | jq -s '.[]|to_entries[]|select(.value.brand == "amd")|.value.mem_type' | jq -csr --arg i $i '.[$i|tonumber]') &&
			echo "  Memory $meminfo  Type: $mem_type"
	fi
	
	atitool -i=$i -vctfstatus -debug=0 | grep -E '  MVDDQ  |  MVDDC  |   VDDCR_HBM  |  VDDCR_SOC  ' | sed  -e 's/ //g' \
		-e 's/^/  /' -e 's/:/ : /g' | sed  ':a; /$/N; s/\n/,/; ta'

	echo -n "  ${PURPLE}DPM${NOCOLOR} $core_dpm ${PURPLE}CORE${NOCOLOR} $core_mhz ${corev}mV"
	echo -n " ${PURPLE}MDPM${NOCOLOR} $mem_dpm ${PURPLE}MEM${NOCOLOR} $mem_mhz $memv"
	[[ ! -z $vddci ]] && echo -en " ${PURPLE}VDDCI${NOCOLOR} $vddci"
	echo -n " ${PURPLE}REF${NOCOLOR} $ref"
	echo    " ${PURPLE}PWR${NOCOLOR} $pwr W ${PURPLE}RPM${NOCOLOR} $fanrpm"

done
